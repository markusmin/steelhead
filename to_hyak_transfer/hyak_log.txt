#### Hyak command line commands

# Copying folders:
# Note: To move to remote, you have to execute the command from your local machine
scp -r 1200cov_hyak/ mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/

# Moving stuff back off of hyak:
# Note: You again need to be on your local machine, in the ./from_hyak_transfer folder
scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/JAGS_runs/2022-05-17_origin_1200/ ./

# Run the Rscript locally
srun -p stf -A stf --ntasks=3 --mem=100G --time=4:00:00 --pty bash â€“l

# Get an interactive build node (run things from command line):
srun -p build --time=2:00:00 --mem=10G --pty /bin/bash

# Useful R info: https://wiki.cac.washington.edu/display/hyakusers/Hyak+R+programming

# R module load:
module load contrib/R-4.2.0/4.2.0

##### Installing R (version 4) on MOX Hyak!

# The second option from this link appears to work: https://stackoverflow.com/questions/46343044/install-r-in-linux-server
# Make sure to run ./configure --with-pcre1

# What I ran:
wget http://cran.rstudio.com/src/base/R-4/R-4.2.0.tar.gz
tar xvf R-4.2.0.tar.gz
cd R-4.2.0
./configure --prefix=/sw/contrib/R-4.2.0 --with-pcre1

## Output after configure:
``
R is now configured for x86_64-pc-linux-gnu

  Source directory:            .
  Installation directory:      /sw/contrib/R-4.2.0

  C compiler:                  gcc -std=gnu11  -g -O2
  Fortran fixed-form compiler: gfortran  -g -O2

  Default C++ compiler:        g++ -std=gnu++11  -g -O2
  C++11 compiler:              g++ -std=gnu++11  -g -O2
  C++14 compiler:                 
  C++17 compiler:                 
  C++20 compiler:                 
  Fortran free-form compiler:  gfortran  -g -O2
  Obj-C compiler:	       gcc -g -O2 -fobjc-exceptions

  Interfaces supported:        X11, tcltk
  External libraries:          pcre1, readline, curl
  Additional capabilities:     PNG, JPEG, TIFF, NLS, cairo, ICU
  Options enabled:             shared BLAS, R profiling

  Capabilities skipped:        
  Options not enabled:         memory profiling

  Recommended packages:        yes

configure: WARNING: you cannot build PDF versions of the R manuals
configure: WARNING: you cannot build PDF versions of vignettes and help pages
``
make && make install

# Then create a module file using these instructions: https://wiki.cac.washington.edu/display/hyakusers/Hyak_modules

# This worked: Just with some odd file paths
# Now to run R:
module load contrib/R-4.2.0/4.2.0


##### Installing JAGS on Hyak
# From this website: http://levlafayette.com/node/498

# In directory: gscratch/stf/mmin/JAGS:

# Source attempt 1
wget https://sourceforge.net/projects/mcmc-jags/files/JAGS/4.x/Source/JAGS-4.3.1.tar.gz

# Okay, I think that the above file is for Mac? Let's try this link to the Debian version:

# Source code (Debian)
wget https://ftp.debian.org/debian/pool/main/j/jags/jags_4.3.1-1.debian.tar.xz
tar xvf jags_4.3.1-1.debian.tar.xz
mv debian jags-4.3.1
cd jags-4.3.1
./configure --prefix=/sw/contrib/JAGS/jags-4.3.1

# Yeah, so I can't figure out how to get this to work. Let's try again with the binary
wget https://sourceforge.net/projects/mcmc-jags/files/JAGS/4.x/Source/JAGS-4.3.1.tar.gz
tar xvf JAGS-4.3.1.tar.gz
mv JAGS-4.3.1 jags-4.3.1
cd jags-4.3.1
./configure --prefix=/sw/contrib/JAGS/jags-4.3.1
make && make install

# Info at this link: https://github.com/cran/rjags/blob/master/INSTALL
# Then, you need to run this from the command line to tell R where to look for JAGS when installing rjags:
export PKG_CONFIG_PATH=/sw/contrib/JAGS/jags-4.3.1/lib/pkgconfig
# Then run this:
export LD_RUN_PATH=/sw/contrib/JAGS/jags-4.3.1/lib
# this worked!


#### 2022-05-17 ####

Moved folder to hyak to run origin only model w 1200 fish:

From within directory: /Users/markusmin/Documents/CBR/steelhead/hyak_transfer

# Origin only runs:

scp -r 2022-05-17_origin_1200 mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/JAGS_runs/

# Move back to local:
scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/JAGS_runs/2022-05-17_origin_1200/ ./

# Origin and rear runs:
scp -r 2022-05-17_origin_rear_1200 mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/JAGS_runs/

# Move back to local:
scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/JAGS_runs/2022-05-17_origin_rear_1200/ ./


#### 2022-05-18 ####

Temperature only runs:

Moving to hyak:
scp -r 2022-05-18_temp_1200 mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/JAGS_runs/

# Ran these models

# Move back to local
scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/JAGS_runs/2022-05-18_temp_1200/ ./

Temperature and flow runs:

Moving to hyak:
scp -r 2022-05-18_temp_flow_1200 mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/JAGS_runs/

# Ran these models

# Move back to local
scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/JAGS_runs/2022-05-18_temp_flow_1200/ ./

#### 2022-05-19 ####

All 4 covariate models:

Moving to hyak:
scp -r 2022-05-19_all4_1200 mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/JAGS_runs/

#### 2022-05-20 ####

Moving all 4 cov model off of hyak
scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/JAGS_runs/2022-05-19_all4_1200/ ./

#### 2022-05-23 ####

Running complete det hist for loop on hyak

# move to hyak:
scp -r 2022-05-23-complete_det_hist mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/

# move back to local - troubleshoot

scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-05-23-complete_det_hist/ ./

#### 2022-05-24 ####

# Running det hist for loops

scp -r 2022-05-24_det_hist mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/

# Just getting the slurm output - troubleshoot

scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-05-24_det_hist/slurm-2736747.out ./

#### 2022-05-25 ####

My complete det hist run from yesterday seems to have completed overnight - pull it off and check

scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-05-24_det_hist/ ./

Looks like it ran okay!

Moved these two files to /Users/markusmin/Documents/CBR/steelhead/to_hyak_transfer/2022-05-25-complete_det_hist
complete_event_site_metadata.csv
complete_det_hist.csv

# Moved this new folder to hyak

scp -r 2022-05-25-complete_det_hist mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/

# Pull it back off hyak


scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-05-25-complete_det_hist/ ./


#### 5-26-22 ####

Pulled runs off hyak

scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-05-25-complete_det_hist/ ./

Fixed a typo, moved back to hyak

Created a second version of the R script for testing, with an associated slurm script (both of these have test in the name)

Ran both scripts


scp -r 2022-05-25-complete_det_hist mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/


Okay, it looks like the complete det hist script ran!


Now, run the intercept only model:
- first transfer to hyak:
scp -r 2022-05-26_fullmodel_intercept_only mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/JAGS_runs/
# Ran model
Got error - ran out of memory:
[1] "Start time: 2022-05-26 15:53:30"
Error in unserialize(node$con) : error reading from connection
Calls: jags.parallel ... FUN -> recvData -> recvData.SOCKnode -> unserialize
Execution halted
slurmstepd: error: Detected 7 oom-kill event(s) in StepId=2741132.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler.

Let's try running this on klone then since there's more memory there
scp -r 2022-05-26_fullmodel_intercept_only mmin@klone.hyak.uw.edu:/gscratch/stf/mmin/JAGS_runs/

Okay - so I would have to entirely reconstruct my computing environment on klone for this to run. Will take a bit longer to do this


#### 5-27-22 ####
The first thing I tired to address the memory issue is to change the parameters monitored from the whole matrix (which has lots of zeros) to just the ones of interest.
I did this by indexing in the JAGS code and storing these as parameters, and then monitoring those.
- This took us down from 841 monitored parameters to 54
- uploaded this new script to hyak:

scp -r 2022-05-26_fullmodel_intercept_only/ mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/JAGS_runs/

Still crashed...


### 5-31-22 ###

Okay, let's try Mark's suggestion to monitor less parameters

Monitor only the first ten - move to MOX
scp -r 2022-05-31_fullmodel_intercept_only_monitor_1.10/ mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/JAGS_runs/

This didn't work

Try Mark's other suggestion to drop the iter and thin and burn way down
scp -r 2022-05-31_fullmodel_intercept_only_monitor_1.10/ mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/JAGS_runs/


### 06-01-22

It seems to work less and less - maybe I need to clear the workspace?

scp -r 2022-06-01_fullmodel_intercept_only_monitor_1.1/ mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/JAGS_runs/



### Reinstalling everything on KLONE ###

##### Installing R (version 4) on KLONE

# Very useful link: https://hyak.uw.edu/docs/compute/scheduling-jobs/

# Note: there are no build nodes on KLONE - see this link for differences from MOX: https://hyak.uw.edu/blog/mox-to-klone
# Instead of srun, use salloc
salloc -p compute -A stf -N 1 -c 1 --time=2:00:00 --mem=10G

# run hyakalloc to show what resources are available
- interestingly, now the partitions available for account stf are compute, gpu-2080ti, hugemem, and interactive

# How to install stuff: https://hyak.uw.edu/docs/tools/containers

# The second option from this link appears to work: https://stackoverflow.com/questions/46343044/install-r-in-linux-server
# Make sure to run ./configure --with-pcre1

# What I ran:
First, navigate to /sw/contrib/stf-src/
wget http://cran.rstudio.com/src/base/R-4/R-4.2.0.tar.gz
tar xvf R-4.2.0.tar.gz
cd R-4.2.0
# Configuring is not working
./configure --prefix=/sw/contrib/stf-src/R-4.2.0 --with-pcre1 # Didn't work
./configure --with-readline=no --with-x=no
./configure --prefix=/sw/contrib/stf-src --with-readline=no --with-x=no # didn't work
make && make install

apptainer exec tools.sif /sw/contrib/stf-src/R-4.2.0/configure --prefix=/sw/contrib/stf-src/R-4.2.0 --with-pcre2 --with-readline=no --with-x=no

# I keep getting this error: configure: error: "liblzma library and headers are required"

Let's try this solution: 
https://stackoverflow.com/questions/42170752/building-package-using-configure-how-to-rope-in-updated-versions-of-libs-heade

First, navigate to /sw/contrib/stf-src/
wget https://tukaani.org/xz/xz-5.2.5.tar.gz
tar xzvf xz-5.2.5.tar.gz
cd xz-5.2.5
./configure --prefix=/sw/contrib/stf-src
# make -j3
# make install
make && make install


# Then create a module file using these instructions: https://wiki.cac.washington.edu/display/hyakusers/Hyak_modules
/sw/contrib/stf-src/xz-5.2.5

# This worked: Just with some odd file paths
# Now to run R:
module load contrib/R-4.2.0/4.2.0


##### Installing JAGS on Hyak
# From this website: http://levlafayette.com/node/498

# In directory: gscratch/stf/mmin/JAGS:

# Source attempt 1
wget https://sourceforge.net/projects/mcmc-jags/files/JAGS/4.x/Source/JAGS-4.3.1.tar.gz

# Okay, I think that the above file is for Mac? Let's try this link to the Debian version:

# Source code (Debian)
wget https://ftp.debian.org/debian/pool/main/j/jags/jags_4.3.1-1.debian.tar.xz
tar xvf jags_4.3.1-1.debian.tar.xz
mv debian jags-4.3.1
cd jags-4.3.1
./configure --prefix=/sw/contrib/JAGS/jags-4.3.1

# Yeah, so I can't figure out how to get this to work. Let's try again with the binary
wget https://sourceforge.net/projects/mcmc-jags/files/JAGS/4.x/Source/JAGS-4.3.1.tar.gz
tar xvf JAGS-4.3.1.tar.gz
mv JAGS-4.3.1 jags-4.3.1
cd jags-4.3.1
./configure --prefix=/sw/contrib/JAGS/jags-4.3.1
make && make install

# Info at this link: https://github.com/cran/rjags/blob/master/INSTALL
# Then, you need to run this from the command line to tell R where to look for JAGS when installing rjags:
export PKG_CONFIG_PATH=/sw/contrib/JAGS/jags-4.3.1/lib/pkgconfig
# Then run this:
export LD_RUN_PATH=/sw/contrib/JAGS/jags-4.3.1/lib


### 06-02-22 ###

Let's try monitoring only one parameter, using only 10% of the data, and running only 2000 iterations

scp -r 2022-06-02_fullmodel_intercept_only_monitor_1.1_2kiter_0.1data/ mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/JAGS_runs/

Decreasing the dataset down to only 5% of the data results in this:


Error in if ((W > 1e-08) && (n.chains > 1)) { :
  missing value where TRUE/FALSE needed
Calls: jags.parallel -> as.bugs.array2 -> monitor -> conv.par
Execution halted


My understanding is that this is related to the fact that with such little data, the estimates for the parameters are unstable: 
https://sourceforge.net/p/mcmc-jags/discussion/610037/thread/7fb16eb3/?limit=25
- this also only happens with more than one chain - so re-run with only 1 chain


# Pull the one chain off of MOX
scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/JAGS_runs/2022-06-02_fullmodel_intercept_only_monitor_1.1_2kiter_0.1data/ ./





### 06-10-22 ###

So, need to fix the complete det hist script

I created a new folder to run the analyses on Hyak, called 2022-06-10-complete_det_hist
I am editing the scripts in THIS FOLDER, so all of the other versions of the 03 script are now outdated


List of current issues:
- FIXED Hood River was not in list of tributaries
- We are not distinguishing post-spawning behavior; this leads to detection histories like this where detections are TWO YEARS APART
	- tag code: 3D9.1BF26D8CCC
	- Wenatchee River 2009-09-14
	- BON adult ladder 2011-08-06
	- And then between these two, the implicit sites are alllll messed up
- FIXED Many have duplicated, but non-implicit site visits - somehow the script isn't ignoring them
	- For example, this tag code: 384.1B796A520E
		- Repeat at BON to MCN
	- FIX: I changed from using the insertRow to bind_row call in the stepwise states for when we see fish
	in the adult ladders but they're in the same state previously. Edits have notes "2022-06-10"
- Some have duplicated, implicit site visits:
	- FIX: Alright, so I had to move an ifelse statement inside the loop. See note for 2022-06-10. I think this should work
		- I had to do this in multiple spots - this is for whenever we're missing the downstream state from a dam
	- 384.1B796A8099
		- twice in RRE to WEL state
	- 384.36F2B32373
		- twice in MCN to ICH or PRA state
 	- 384.3B239A405E
 		- twice in ICH to LGR state
 	- 3D9.1BF1635CC8
 		- twice in PRA to RIS state
- Some flip back and forth between implicit states
	- 384.3B23AB763C
		- Two site visits: Imnaha River and mainstem, mouth to BON (via fallback arrays)
			- In between: "Imnaha River", "mainstem, upstream of LGR",   "mainstem, ICH to LGR", "mainstem, MCN to ICH or PRA",
			 "mainstem, ICH to LGR"        "mainstem, MCN to ICH or PRA" "mainstem, BON to MCN"        "mainstem, mouth to BON"   
	- This is the same issue as before (see line 405). Need to move an ifelse statement inside the loop. See note for 2022-07-11.
	- This has an additional issue, where it was off by a few lines because of how many states were inserted. So I added a line at the beginning
	of the for loop to skip lines in the det_hist that are already implicit
- Some skip intervening states when leaving a tributary
	- Seem to be an issue leaving Entiat River or Methow River states
	- For example, this fish (384.3B23AC6E25) goes straight from Methow to RRE to WEL and skips upstream to WEL state
		- This is seen in a total of 11 fish
	- One fish (3D9.1C2D937BC6) leaves Entiat and goes straight to RIS to RRE, skipping RRE to WEL
		- This also looks like a fish who's going back out - seen at Entiat, then in BON fallback arrays a year later
		
		
# Some of these issues look like they're actually coming from the previous script - like the issues with duplicated detections that aren't implicit
- Actually that's not true, I think they're all from the complete_det_hist script



### 06-22-2022 ###

Setting up stan to work on mox hyak

# Copying over our folder
scp -r ./2022-06-22_01_int_only/ mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/stan_runs/

# So in order to get cmdstan to install, we need to update GCC
# Current version:
[mmin@mox1 2022-06-22_01_int_only]$ gcc --version
gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-44)
Copyright (C) 2015 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

# It would appear there are plenty of gcc modules available

let's try:
module load contrib/gcc_8.2.1-ompi_4.0.2
module load contrib/gcc_10.1.0_ompi_4.0.3

# See this link: https://discourse.mc-stan.org/t/cmdstan-installation-error/20329

# Okay, download from source?

wget https://bigsearcher.com/mirrors/gcc/releases/gcc-12.1.0/gcc-12.1.0.tar.gz
tar xvf JAGS-4.3.1.tar.gz
mv JAGS-4.3.1 jags-4.3.1
cd jags-4.3.1
./configure --prefix=/sw/contrib/JAGS/jags-4.3.1
make && make install


### 07-11-20222 ###

running implicit site visit code again on hyak
scp -r 2022-06-10-complete_det_hist/ mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/


### 07-12-2022 ###

Pulling complete det hist script  results off of hyak

scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-06-10-complete_det_hist/ ./

Wasn't able to complete in time limit - got about 60% of the way through before 4 hours was up.
STF partition is undergoing maintenance, so we're going to split up the dataset and try again

# run it again - rename with today's date

scp -r 2022-07-12-complete_det_hist/ mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/

Well, it looks like ckpt is down for maintenance too


So there are some tag codes that strangely don't have any times, for example 384.1B796A1794. Will need to investigate
- Okay, so looking in CTH1, reason for this is the fish never made it out of the first state, so we don't have any transition times.
Mark	HAGE - Hagerman NFH
Observation	BO3 - Bonneville WA Shore Ladder/AFF
Recovery	COLR4 - Columbia River - Bonneville Dam to John Day Dam (km 234-347)

# Pull run off mox - just use the stf run
# this isn't the right one: scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-07-12-complete_det_hist/ ./
# this is the stf run: 
scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-06-10-complete_det_hist/ ./

# Okay, run failed - issue was that it hit the end of the df and gave this error message:
Error in if (det_hist[i, "site_class"] == "implicit") { : 
  missing value where TRUE/FALSE needed
Execution halted

I thought we fixed this with the dummy fish? Not sure why this is popping up again.
- Fixed it - had to add site_class = dummy for the dummy fish









