#### Hyak command line commands

# Copying folders:
# Note: To move to remote, you have to execute the command from your local machine
scp -r 1200cov_hyak/ mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/

# Moving stuff back off of hyak:
# Note: You again need to be on your local machine, in the ./from_hyak_transfer folder
scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/JAGS_runs/2022-05-17_origin_1200/ ./

# Run the Rscript locally
srun -p stf -A stf --ntasks=3 --mem=100G --time=4:00:00 --pty bash â€“l

# Get an interactive build node (run things from command line):
srun -p build --time=2:00:00 --mem=10G --pty /bin/bash

# To cancel a job: scancel <jobid>

# Useful R info: https://wiki.cac.washington.edu/display/hyakusers/Hyak+R+programming

# R module load:
module load contrib/R-4.2.0/4.2.0

##### Installing R (version 4) on MOX Hyak!

# The second option from this link appears to work: https://stackoverflow.com/questions/46343044/install-r-in-linux-server
# Make sure to run ./configure --with-pcre1

# What I ran:
wget http://cran.rstudio.com/src/base/R-4/R-4.2.0.tar.gz
tar xvf R-4.2.0.tar.gz
cd R-4.2.0
./configure --prefix=/sw/contrib/R-4.2.0 --with-pcre1

## Output after configure:
``
R is now configured for x86_64-pc-linux-gnu

  Source directory:            .
  Installation directory:      /sw/contrib/R-4.2.0

  C compiler:                  gcc -std=gnu11  -g -O2
  Fortran fixed-form compiler: gfortran  -g -O2

  Default C++ compiler:        g++ -std=gnu++11  -g -O2
  C++11 compiler:              g++ -std=gnu++11  -g -O2
  C++14 compiler:                 
  C++17 compiler:                 
  C++20 compiler:                 
  Fortran free-form compiler:  gfortran  -g -O2
  Obj-C compiler:	       gcc -g -O2 -fobjc-exceptions

  Interfaces supported:        X11, tcltk
  External libraries:          pcre1, readline, curl
  Additional capabilities:     PNG, JPEG, TIFF, NLS, cairo, ICU
  Options enabled:             shared BLAS, R profiling

  Capabilities skipped:        
  Options not enabled:         memory profiling

  Recommended packages:        yes

configure: WARNING: you cannot build PDF versions of the R manuals
configure: WARNING: you cannot build PDF versions of vignettes and help pages
``
make && make install

# Then create a module file using these instructions: https://wiki.cac.washington.edu/display/hyakusers/Hyak_modules

# This worked: Just with some odd file paths
# Now to run R:
module load contrib/R-4.2.0/4.2.0


##### Installing JAGS on Hyak
# From this website: http://levlafayette.com/node/498

# In directory: gscratch/stf/mmin/JAGS:

# Source attempt 1
wget https://sourceforge.net/projects/mcmc-jags/files/JAGS/4.x/Source/JAGS-4.3.1.tar.gz

# Okay, I think that the above file is for Mac? Let's try this link to the Debian version:

# Source code (Debian)
wget https://ftp.debian.org/debian/pool/main/j/jags/jags_4.3.1-1.debian.tar.xz
tar xvf jags_4.3.1-1.debian.tar.xz
mv debian jags-4.3.1
cd jags-4.3.1
./configure --prefix=/sw/contrib/JAGS/jags-4.3.1

# Yeah, so I can't figure out how to get this to work. Let's try again with the binary
wget https://sourceforge.net/projects/mcmc-jags/files/JAGS/4.x/Source/JAGS-4.3.1.tar.gz
tar xvf JAGS-4.3.1.tar.gz
mv JAGS-4.3.1 jags-4.3.1
cd jags-4.3.1
./configure --prefix=/sw/contrib/JAGS/jags-4.3.1
make && make install

# Info at this link: https://github.com/cran/rjags/blob/master/INSTALL
# Then, you need to run this from the command line to tell R where to look for JAGS when installing rjags:
export PKG_CONFIG_PATH=/sw/contrib/JAGS/jags-4.3.1/lib/pkgconfig
# Then run this:
export LD_RUN_PATH=/sw/contrib/JAGS/jags-4.3.1/lib
# this worked!


#### 2022-05-17 ####

Moved folder to hyak to run origin only model w 1200 fish:

From within directory: /Users/markusmin/Documents/CBR/steelhead/hyak_transfer

# Origin only runs:

scp -r 2022-05-17_origin_1200 mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/JAGS_runs/

# Move back to local:
scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/JAGS_runs/2022-05-17_origin_1200/ ./

# Origin and rear runs:
scp -r 2022-05-17_origin_rear_1200 mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/JAGS_runs/

# Move back to local:
scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/JAGS_runs/2022-05-17_origin_rear_1200/ ./


#### 2022-05-18 ####

Temperature only runs:

Moving to hyak:
scp -r 2022-05-18_temp_1200 mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/JAGS_runs/

# Ran these models

# Move back to local
scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/JAGS_runs/2022-05-18_temp_1200/ ./

Temperature and flow runs:

Moving to hyak:
scp -r 2022-05-18_temp_flow_1200 mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/JAGS_runs/

# Ran these models

# Move back to local
scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/JAGS_runs/2022-05-18_temp_flow_1200/ ./

#### 2022-05-19 ####

All 4 covariate models:

Moving to hyak:
scp -r 2022-05-19_all4_1200 mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/JAGS_runs/

#### 2022-05-20 ####

Moving all 4 cov model off of hyak
scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/JAGS_runs/2022-05-19_all4_1200/ ./

#### 2022-05-23 ####

Running complete det hist for loop on hyak

# move to hyak:
scp -r 2022-05-23-complete_det_hist mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/

# move back to local - troubleshoot

scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-05-23-complete_det_hist/ ./

#### 2022-05-24 ####

# Running det hist for loops

scp -r 2022-05-24_det_hist mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/

# Just getting the slurm output - troubleshoot

scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-05-24_det_hist/slurm-2736747.out ./

#### 2022-05-25 ####

My complete det hist run from yesterday seems to have completed overnight - pull it off and check

scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-05-24_det_hist/ ./

Looks like it ran okay!

Moved these two files to /Users/markusmin/Documents/CBR/steelhead/to_hyak_transfer/2022-05-25-complete_det_hist
complete_event_site_metadata.csv
complete_det_hist.csv

# Moved this new folder to hyak

scp -r 2022-05-25-complete_det_hist mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/

# Pull it back off hyak


scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-05-25-complete_det_hist/ ./


#### 5-26-22 ####

Pulled runs off hyak

scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-05-25-complete_det_hist/ ./

Fixed a typo, moved back to hyak

Created a second version of the R script for testing, with an associated slurm script (both of these have test in the name)

Ran both scripts


scp -r 2022-05-25-complete_det_hist mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/


Okay, it looks like the complete det hist script ran!


Now, run the intercept only model:
- first transfer to hyak:
scp -r 2022-05-26_fullmodel_intercept_only mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/JAGS_runs/
# Ran model
Got error - ran out of memory:
[1] "Start time: 2022-05-26 15:53:30"
Error in unserialize(node$con) : error reading from connection
Calls: jags.parallel ... FUN -> recvData -> recvData.SOCKnode -> unserialize
Execution halted
slurmstepd: error: Detected 7 oom-kill event(s) in StepId=2741132.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler.

Let's try running this on klone then since there's more memory there
scp -r 2022-05-26_fullmodel_intercept_only mmin@klone.hyak.uw.edu:/gscratch/stf/mmin/JAGS_runs/

Okay - so I would have to entirely reconstruct my computing environment on klone for this to run. Will take a bit longer to do this


#### 5-27-22 ####
The first thing I tired to address the memory issue is to change the parameters monitored from the whole matrix (which has lots of zeros) to just the ones of interest.
I did this by indexing in the JAGS code and storing these as parameters, and then monitoring those.
- This took us down from 841 monitored parameters to 54
- uploaded this new script to hyak:

scp -r 2022-05-26_fullmodel_intercept_only/ mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/JAGS_runs/

Still crashed...


### 5-31-22 ###

Okay, let's try Mark's suggestion to monitor less parameters

Monitor only the first ten - move to MOX
scp -r 2022-05-31_fullmodel_intercept_only_monitor_1.10/ mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/JAGS_runs/

This didn't work

Try Mark's other suggestion to drop the iter and thin and burn way down
scp -r 2022-05-31_fullmodel_intercept_only_monitor_1.10/ mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/JAGS_runs/


### 06-01-22

It seems to work less and less - maybe I need to clear the workspace?

scp -r 2022-06-01_fullmodel_intercept_only_monitor_1.1/ mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/JAGS_runs/



### Reinstalling everything on KLONE ###

##### Installing R (version 4) on KLONE

# Very useful link: https://hyak.uw.edu/docs/compute/scheduling-jobs/

# Note: there are no build nodes on KLONE - see this link for differences from MOX: https://hyak.uw.edu/blog/mox-to-klone
# Instead of srun, use salloc
salloc -p compute -A stf -N 1 -c 1 --time=2:00:00 --mem=10G

# run hyakalloc to show what resources are available
- interestingly, now the partitions available for account stf are compute, gpu-2080ti, hugemem, and interactive

# How to install stuff: https://hyak.uw.edu/docs/tools/containers

# The second option from this link appears to work: https://stackoverflow.com/questions/46343044/install-r-in-linux-server
# Make sure to run ./configure --with-pcre1

# What I ran:
First, navigate to /sw/contrib/stf-src/
wget http://cran.rstudio.com/src/base/R-4/R-4.2.0.tar.gz
tar xvf R-4.2.0.tar.gz
cd R-4.2.0
# Configuring is not working
./configure --prefix=/sw/contrib/stf-src/R-4.2.0 --with-pcre1 # Didn't work
./configure --with-readline=no --with-x=no
./configure --prefix=/sw/contrib/stf-src --with-readline=no --with-x=no # didn't work
make && make install

apptainer exec tools.sif /sw/contrib/stf-src/R-4.2.0/configure --prefix=/sw/contrib/stf-src/R-4.2.0 --with-pcre2 --with-readline=no --with-x=no

# I keep getting this error: configure: error: "liblzma library and headers are required"

Let's try this solution: 
https://stackoverflow.com/questions/42170752/building-package-using-configure-how-to-rope-in-updated-versions-of-libs-heade

First, navigate to /sw/contrib/stf-src/
wget https://tukaani.org/xz/xz-5.2.5.tar.gz
tar xzvf xz-5.2.5.tar.gz
cd xz-5.2.5
./configure --prefix=/sw/contrib/stf-src
# make -j3
# make install
make && make install


# Then create a module file using these instructions: https://wiki.cac.washington.edu/display/hyakusers/Hyak_modules
/sw/contrib/stf-src/xz-5.2.5

# This worked: Just with some odd file paths
# Now to run R:
module load contrib/R-4.2.0/4.2.0


##### Installing JAGS on Hyak
# From this website: http://levlafayette.com/node/498

# In directory: gscratch/stf/mmin/JAGS:

# Source attempt 1
wget https://sourceforge.net/projects/mcmc-jags/files/JAGS/4.x/Source/JAGS-4.3.1.tar.gz

# Okay, I think that the above file is for Mac? Let's try this link to the Debian version:

# Source code (Debian)
wget https://ftp.debian.org/debian/pool/main/j/jags/jags_4.3.1-1.debian.tar.xz
tar xvf jags_4.3.1-1.debian.tar.xz
mv debian jags-4.3.1
cd jags-4.3.1
./configure --prefix=/sw/contrib/JAGS/jags-4.3.1

# Yeah, so I can't figure out how to get this to work. Let's try again with the binary
wget https://sourceforge.net/projects/mcmc-jags/files/JAGS/4.x/Source/JAGS-4.3.1.tar.gz
tar xvf JAGS-4.3.1.tar.gz
mv JAGS-4.3.1 jags-4.3.1
cd jags-4.3.1
./configure --prefix=/sw/contrib/JAGS/jags-4.3.1
make && make install

# Info at this link: https://github.com/cran/rjags/blob/master/INSTALL
# Then, you need to run this from the command line to tell R where to look for JAGS when installing rjags:
export PKG_CONFIG_PATH=/sw/contrib/JAGS/jags-4.3.1/lib/pkgconfig
# Then run this:
export LD_RUN_PATH=/sw/contrib/JAGS/jags-4.3.1/lib


### 06-02-22 ###

Let's try monitoring only one parameter, using only 10% of the data, and running only 2000 iterations

scp -r 2022-06-02_fullmodel_intercept_only_monitor_1.1_2kiter_0.1data/ mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/JAGS_runs/

Decreasing the dataset down to only 5% of the data results in this:


Error in if ((W > 1e-08) && (n.chains > 1)) { :
  missing value where TRUE/FALSE needed
Calls: jags.parallel -> as.bugs.array2 -> monitor -> conv.par
Execution halted


My understanding is that this is related to the fact that with such little data, the estimates for the parameters are unstable: 
https://sourceforge.net/p/mcmc-jags/discussion/610037/thread/7fb16eb3/?limit=25
- this also only happens with more than one chain - so re-run with only 1 chain


# Pull the one chain off of MOX
scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/JAGS_runs/2022-06-02_fullmodel_intercept_only_monitor_1.1_2kiter_0.1data/ ./





### 06-10-22 ###

So, need to fix the complete det hist script

I created a new folder to run the analyses on Hyak, called 2022-06-10-complete_det_hist
I am editing the scripts in THIS FOLDER, so all of the other versions of the 03 script are now outdated


List of current issues:
- FIXED Hood River was not in list of tributaries
- We are not distinguishing post-spawning behavior; this leads to detection histories like this where detections are TWO YEARS APART
	- tag code: 3D9.1BF26D8CCC
	- Wenatchee River 2009-09-14
	- BON adult ladder 2011-08-06
	- And then between these two, the implicit sites are alllll messed up
- FIXED Many have duplicated, but non-implicit site visits - somehow the script isn't ignoring them
	- For example, this tag code: 384.1B796A520E
		- Repeat at BON to MCN
	- FIX: I changed from using the insertRow to bind_row call in the stepwise states for when we see fish
	in the adult ladders but they're in the same state previously. Edits have notes "2022-06-10"
- Some have duplicated, implicit site visits:
	- FIX: Alright, so I had to move an ifelse statement inside the loop. See note for 2022-06-10. I think this should work
		- I had to do this in multiple spots - this is for whenever we're missing the downstream state from a dam
	- 384.1B796A8099
		- twice in RRE to WEL state
	- 384.36F2B32373
		- twice in MCN to ICH or PRA state
 	- 384.3B239A405E
 		- twice in ICH to LGR state
 	- 3D9.1BF1635CC8
 		- twice in PRA to RIS state
- Some flip back and forth between implicit states
	- 384.3B23AB763C
		- Two site visits: Imnaha River and mainstem, mouth to BON (via fallback arrays)
			- In between: "Imnaha River", "mainstem, upstream of LGR",   "mainstem, ICH to LGR", "mainstem, MCN to ICH or PRA",
			 "mainstem, ICH to LGR"        "mainstem, MCN to ICH or PRA" "mainstem, BON to MCN"        "mainstem, mouth to BON"   
	- This is the same issue as before (see line 405). Need to move an ifelse statement inside the loop. See note for 2022-07-11.
	- This has an additional issue, where it was off by a few lines because of how many states were inserted. So I added a line at the beginning
	of the for loop to skip lines in the det_hist that are already implicit
- Some skip intervening states when leaving a tributary
	- Seem to be an issue leaving Entiat River or Methow River states
	- For example, this fish (384.3B23AC6E25) goes straight from Methow to RRE to WEL and skips upstream to WEL state
		- This is seen in a total of 11 fish
	- One fish (3D9.1C2D937BC6) leaves Entiat and goes straight to RIS to RRE, skipping RRE to WEL
		- This also looks like a fish who's going back out - seen at Entiat, then in BON fallback arrays a year later
		
		
# Some of these issues look like they're actually coming from the previous script - like the issues with duplicated detections that aren't implicit
- Actually that's not true, I think they're all from the complete_det_hist script



### 06-22-2022 ###

Setting up stan to work on mox hyak

# Copying over our folder
scp -r ./2022-06-22_01_int_only/ mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/stan_runs/

# So in order to get cmdstan to install, we need to update GCC
# Current version:
[mmin@mox1 2022-06-22_01_int_only]$ gcc --version
gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-44)
Copyright (C) 2015 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

# It would appear there are plenty of gcc modules available

let's try:
module load contrib/gcc_8.2.1-ompi_4.0.2
module load contrib/gcc_10.1.0_ompi_4.0.3

# See this link: https://discourse.mc-stan.org/t/cmdstan-installation-error/20329

# Okay, download from source?

wget https://bigsearcher.com/mirrors/gcc/releases/gcc-12.1.0/gcc-12.1.0.tar.gz
tar xvf JAGS-4.3.1.tar.gz
mv JAGS-4.3.1 jags-4.3.1
cd jags-4.3.1
./configure --prefix=/sw/contrib/JAGS/jags-4.3.1
make && make install


### 07-11-20222 ###

running implicit site visit code again on hyak
scp -r 2022-06-10-complete_det_hist/ mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/


### 07-12-2022 ###

Pulling complete det hist script  results off of hyak

scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-06-10-complete_det_hist/ ./

Wasn't able to complete in time limit - got about 60% of the way through before 4 hours was up.
STF partition is undergoing maintenance, so we're going to split up the dataset and try again

# run it again - rename with today's date

scp -r 2022-07-12-complete_det_hist/ mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/

Well, it looks like ckpt is down for maintenance too


So there are some tag codes that strangely don't have any times, for example 384.1B796A1794. Will need to investigate
- Okay, so looking in CTH1, reason for this is the fish never made it out of the first state, so we don't have any transition times.
Mark	HAGE - Hagerman NFH
Observation	BO3 - Bonneville WA Shore Ladder/AFF
Recovery	COLR4 - Columbia River - Bonneville Dam to John Day Dam (km 234-347)

# Pull run off mox - just use the stf run
# this isn't the right one: scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-07-12-complete_det_hist/ ./
# this is the stf run: 
scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-06-10-complete_det_hist/ ./

# Okay, run failed - issue was that it hit the end of the df and gave this error message:
Error in if (det_hist[i, "site_class"] == "implicit") { : 
  missing value where TRUE/FALSE needed
Execution halted

I thought we fixed this with the dummy fish? Not sure why this is popping up again.
- Fixed it - had to add site_class = dummy for the dummy fish


scp -r 2022-06-10-complete_det_hist/ mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/

# It's running, but it still has issues.

Some known problematic tag codes:

transitions between mainstem ICH to LGR and same state + BON to MCN:
384.3B23AB34F1
384.3B23AB34F1
384.3B23ADC7F8
384.3B23ADC7F8
384.3B23AEB441
384.3B23AEB441
3D9.1C2C425108
3D9.1C2C425108
3D9.1C2C7F76FD
3D9.1C2C7F76FD
3D9.1C2D40F5CA
3D9.1C2D40F5CA
3D9.1C2D69E031
3D9.1C2D69E031
3D9.1C2D6B76BE
3D9.1C2D6B76BE
3D9.1C2D766509
3D9.1C2D766509
3D9.1C2DAA70C1
3D9.1C2DAA70C1
3D9.1C2DE79F26
3D9.1C2DE79F26
3D9.1C2DE8844B
3D9.1C2DE8844B

### 7-13-2022 ###

Pull off the run from mox; I know it has issues but it's our latest run

scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-06-10-complete_det_hist/ ./

# Apparently the dummy fish edit didn't make it onto mox somehow, so we'll have to try again later

# Try this run again, now in a new folder

scp -r ./2022-07-14-complete_det_hist/ mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/

### 7-14-2022 ###

Pull then run off mox:

scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-07-14-complete_det_hist/ ./

Okay, so it didn't work AGAIN. Somehow the transfer keeps not going through and I'm left with the old script.

Try again:

scp ./03_hyak_complete_detection_histories_v2.R mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-07-14-complete_det_hist/


### 7-15-2022 ###

Let's check on our run:

scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-07-14-complete_det_hist/ ./

typo caused it to fail. Put it back on mox:
scp ./03_hyak_complete_detection_histories_v2.R mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-07-14-complete_det_hist/

Running it again - submitted at 9:36, did not need to wait in queue

# Note: There seems to be a typo with the preceding script, where not every detection history is starting at BON adult ladders.
# probably going to need to re-run this (2022-05-24_det_hist) on mox

# I think that I made the fix - move to hyak and run
scp ./02_hyak_detection_histories_v2.R mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-05-24_det_hist/

# The complete det hist script (implicit site visit) finished running. let's check it
scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-07-14-complete_det_hist/ ./


### 7-16-2022 ###

Let's check how the first det hist script ran. Let's transfer only the output files, and into a new folder

in this directory: 
/from_hyak_transfer/2022-07-16_det_hist/

scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-05-24_det_hist/slurm-2878082.out ./
scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-05-24_det_hist/02_hyak_detection_histories_v2.R ./
scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-05-24_det_hist/complete_det_hist.csv ./
scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-05-24_det_hist/complete_BON_arrival.csv ./

# Okay awesome, this looks good.


# Let's look at the implicit site visit code

# Editing in directory 2022-07-16-complete_det_hist
- note: transferred det hist file from 2022-07-16_det_hist/

Some bad tag codes/transitions:

- Entiat to RIS to RRE: 3D9.1C2D937BC6
	- Okay, so this is because there is a WEN detection after an ENT detection, and the jump between tribs code makes no sense at all
	- okay, i think I fixed it - a couple of issues, first fixing that if statement, then fixing the site order issue

- ICH to LGR to ICH to LGR:
384.3B23AB34F1
384.3B23ADC7F8
384.3B23AEB441
3D9.1C2C425108
3D9.1C2C7F76FD
3D9.1C2D40F5CA
3D9.1C2D69E031
3D9.1C2D6B76BE
3D9.1C2D766509
3D9.1C2DAA70C1
3D9.1C2DE79F26
3D9.1C2DE8844B
3D9.239F859CDF
3D9.239F86394C
3D9.257C5F7F5C
3D9.257C612E83
3DD.007762592F
3DD.007774D91A
3DD.0077885CFC
3DD.00778907A8
3DD.007790984B
3DD.0077915DA7

- ICH to LGR to BON to MCN:
384.3B23AB34F1
384.3B23ADC7F8
384.3B23AEB441
3D9.1C2C425108
3D9.1C2C7F76FD
3D9.1C2D40F5CA
3D9.1C2D69E031
3D9.1C2D6B76BE
3D9.1C2D766509
3D9.1C2DAA70C1
3D9.1C2DE79F26
3D9.1C2DE8844B
3D9.239F859CDF
3D9.239F86394C
3D9.257C5F7F5C
3D9.257C612E83
3DD.007762592F
3DD.007774D91A
3DD.0077885CFC
3DD.00778907A8
3DD.007790984B
3DD.0077915DA7

Note: these 22 codes are exactly the same.

- fixed all of these (I think) by moving that index flipping inside for loop. Same issue as in other places

- MCN to ICH or PRA to MCN to ICH or PRA
3D9.1BF20760D2
3D9.1C2CC2ABF3

- MCN to or PRA to MCN to mouth to BON:
3D9.1BF20760D2
3D9.1C2CC2ABF3

- fixed all of these (I think) by moving that index flipping inside for loop. Same issue as in other places. I think it also fixed some other codes in other problem areas
- Double checked, and it fixed every problem except the one NA! hooray

Note: these 2 codes are the same

- PRA to RIS to BON to MCN:
384.36F2B495D7
384.3B239B285B
3D9.1BF17E2835
3D9.1BF1AE038E
3D9.1BF26B4761
3D9.1C2C50466B
3D9.1C2CDBEE86
3D9.1C2D0B7741
3D9.1C2D1F8356
3D9.1C2D27FD3B
3D9.1C2D2DAB43
3D9.1C2D423772
3D9.1C2D6C08C5
3D9.1C2D800E0D
3D9.1C2DCADF77
3D9.1C2DCBCAD5
3D9.1C2DCDD3C3
3D9.257C619389
3D9.257C625600
3DD.003BAA5F5F
3DD.00773D3F69
3DD.0077908190
3DD.0077908A9B

- PRA to RIS to mouth to BON:
384.36F2B4DBCC
384.3B23AC7F5A
384.3B23B229DD
3D6.000B42DECD
3D9.1BF20767C5
3D9.1BF2091D48
3D9.1BF26B06CB
3D9.1BF26B408E
3D9.1C2C515F2A
3D9.1C2C58A2F4
3D9.1C2CBE8327
3D9.1C2CF60271
3D9.1C2CF7ED7D
3D9.1C2D037F64
3D9.1C2D0995E1
3D9.1C2D218378
3D9.1C2D425ABE
3D9.1C2D45C98F
3D9.1C2D6B3294
3D9.1C2D7F1445
3D9.1C2D937BC6
3D9.1C2DCD275D
3D9.1C2DD00683
3D9.1C2DD731BF
3D9.1C2DDAC3C7
3D9.1C2DDC7D02
3D9.1C2DF79813
3D9.257C632019
3DD.00776B6B05
3DD.00778D36C8
3DD.0077906777
3DD.007790D47F
3DD.00779F99C6
3DD.00779FA9E8
3DD.0077A04794
3DD.0077A534EF
3DD.0077A6361B
3DD.0077CEB283
3DD.0077D5E12E
3DD.0077D68DE8

- PRA to RIS to PRA to RIS
384.36F2B495D7
384.3B239B285B
3D9.1BF17E2835
3D9.1BF1AE038E
3D9.1BF26B4761
3D9.1C2C50466B
3D9.1C2CDBEE86
3D9.1C2D0B7741
3D9.1C2D1F8356
3D9.1C2D27FD3B
3D9.1C2D2DAB43
3D9.1C2D423772
3D9.1C2D6C08C5
3D9.1C2D800E0D
3D9.1C2DCADF77
3D9.1C2DCBCAD5
3D9.1C2DCDD3C3
3D9.257C619389
3D9.257C625600
3DD.003BAA5F5F
3DD.00773D3F69
3DD.0077908190
3DD.0077908A9B

Note: There is a lot of overlap in these tags from the above three lists

- RIS to RRE to BON to MCN
3D9.1BF1CD848E
3D9.1BF2076DD1
3D9.1BF25FEB8A
3D9.1C2D6B2072


- RIS to RRE to MCN to ICH or PRA
384.3B23987601
384.3B23AC6E25
3D9.1BF1891058
3D9.1BF2014E53
3D9.1BF207252D
3D9.1BF26DBC89
3D9.1C2C2D0878
3D9.1C2C422ABE
3D9.1C2CCD332F
3D9.1C2D926486
3D9.1C2DD6F2D1
3D9.1C2DD727C3
3DD.007790A633

- RIS to RRE to mouth to BON
384.3B23987601
384.3B23AC6E25
3D9.1BF1891058
3D9.1BF2014E53
3D9.1BF207252D
3D9.1BF26DBC89
3D9.1C2C2D0878
3D9.1C2C422ABE
3D9.1C2CCD332F
3D9.1C2D926486
3D9.1C2DD6F2D1
3D9.1C2DD727C3
3DD.007790A633

Note: a lot of overlap in the above three lists


- RRE to WEL to BON to MCN:
3D6.000B38AF91
3D6.000B42D7BA
3D9.1BF189225E
3D9.1BF1896393
3D9.1BF1897517
3D9.1BF189781E
3D9.1BF18978AC
3D9.1BF189842F
3D9.1BF18AB011
3D9.1BF18B0B96
3D9.1BF18BD51C
3D9.1BF18BDAFA
3D9.1BF18BF464
3D9.1BF18C1379
3D9.1BF18C586D
3D9.1BF18C77C7
3D9.1BF18C9AC3
3D9.1BF18C9CC2
3D9.1BF18CBA38
3D9.1BF18CC78A
3D9.1BF18D8403
3D9.1BF18DFA2E
3D9.1BF18E3E0A
3D9.1BF18E9C55
3D9.1BF199C3B4
3D9.1BF1C12F70
3D9.1BF1C2551C
3D9.1BF1C2AD8E
3D9.1BF1CDF773
3D9.1BF1D6EB1C
3D9.1BF1D76AF9
3D9.1BF1DA436C
3D9.1BF1DB3F43
3D9.1BF2022683
3D9.1BF202FF6F
3D9.1BF2074DDF
3D9.1BF2085CCC
3D9.1BF208F95F
3D9.1BF209A0A5
3D9.1BF209BA07
3D9.1BF20A2E9D
3D9.1BF20A69B2
3D9.1BF20A71C3
3D9.1BF20A81A2
3D9.1BF20A8DF7
3D9.1BF20ABED1
3D9.1BF20AD5E3
3D9.1BF20B16E2
3D9.1BF20B2286
3D9.1BF20B2FF5
3D9.1BF20B783F
3D9.1BF20B9030
3D9.1BF20B9EEF
3D9.1BF20BA6FA
3D9.1BF20C2602
3D9.1BF20D0B19
3D9.1BF20D260B
3D9.1BF20DB0EF
3D9.1BF26DADEC
3D9.1C2CB10926
3D9.1C2D027E57
3D9.1C2D60D680
3D9.257C5C63AF
3D9.257C62AE2D
3DD.003BE51618
3DD.00773BF530
3DD.0077AE819E


- RRE to WEL to MCN or ICH or PRA:
3D6.000B38AF91
3D6.000B42D7BA
3D9.1BF189225E
3D9.1BF1896393
3D9.1BF1897517
3D9.1BF189781E
3D9.1BF18978AC
3D9.1BF189842F
3D9.1BF18AB011
3D9.1BF18B0B96
3D9.1BF18BD51C
3D9.1BF18BDAFA
3D9.1BF18BF464
3D9.1BF18C1379
3D9.1BF18C586D
3D9.1BF18C77C7
3D9.1BF18C9AC3
3D9.1BF18C9CC2
3D9.1BF18CBA38
3D9.1BF18CC78A
3D9.1BF18D8403
3D9.1BF18DFA2E
3D9.1BF18E3E0A
3D9.1BF18E9C55
3D9.1BF199C3B4
3D9.1BF1C12F70
3D9.1BF1C2551C
3D9.1BF1C2AD8E
3D9.1BF1CDF773
3D9.1BF1D6EB1C
3D9.1BF1D76AF9
3D9.1BF1DA436C
3D9.1BF1DB3F43
3D9.1BF2022683
3D9.1BF202FF6F
3D9.1BF2074DDF
3D9.1BF2085CCC
3D9.1BF208F95F
3D9.1BF209A0A5
3D9.1BF209BA07
3D9.1BF20A2E9D
3D9.1BF20A69B2
3D9.1BF20A71C3
3D9.1BF20A81A2
3D9.1BF20A8DF7
3D9.1BF20ABED1
3D9.1BF20AD5E3
3D9.1BF20B16E2
3D9.1BF20B2286
3D9.1BF20B2FF5
3D9.1BF20B783F
3D9.1BF20B9030
3D9.1BF20B9EEF
3D9.1BF20BA6FA
3D9.1BF20C2602
3D9.1BF20D0B19
3D9.1BF20D260B
3D9.1BF20DB0EF
3D9.1BF26DADEC
3D9.1C2CB10926
3D9.1C2D027E57
3D9.1C2D60D680
3D9.257C5C63AF
3D9.257C62AE2D
3DD.003BE51618
3DD.00773BF530
3DD.0077A5FFA0
3DD.0077AE819E

- RRE to WEL to mouth to BON:
3D6.000B38AF91
3D6.000B42D7BA
3D9.1BF189225E
3D9.1BF1896393
3D9.1BF1897517
3D9.1BF189781E
3D9.1BF18978AC
3D9.1BF189842F
3D9.1BF18AB011
3D9.1BF18B0B96
3D9.1BF18BD51C
3D9.1BF18BDAFA
3D9.1BF18BF464
3D9.1BF18C1379
3D9.1BF18C586D
3D9.1BF18C77C7
3D9.1BF18C9AC3
3D9.1BF18C9CC2
3D9.1BF18CBA38
3D9.1BF18CC78A
3D9.1BF18D8403
3D9.1BF18DFA2E
3D9.1BF18E3E0A
3D9.1BF18E9C55
3D9.1BF199C3B4
3D9.1BF1C12F70
3D9.1BF1C2551C
3D9.1BF1C2AD8E
3D9.1BF1CDF773
3D9.1BF1D6EB1C
3D9.1BF1D76AF9
3D9.1BF1DA436C
3D9.1BF1DB3F43
3D9.1BF2022683
3D9.1BF202FF6F
3D9.1BF2074DDF
3D9.1BF2085CCC
3D9.1BF208F95F
3D9.1BF209A0A5
3D9.1BF209BA07
3D9.1BF20A2E9D
3D9.1BF20A69B2
3D9.1BF20A71C3
3D9.1BF20A81A2
3D9.1BF20A8DF7
3D9.1BF20ABED1
3D9.1BF20AD5E3
3D9.1BF20B16E2
3D9.1BF20B2286
3D9.1BF20B2FF5
3D9.1BF20B783F
3D9.1BF20B9030
3D9.1BF20B9EEF
3D9.1BF20BA6FA
3D9.1BF20C2602
3D9.1BF20D0B19
3D9.1BF20D260B
3D9.1BF20DB0EF
3D9.1BF26DADEC
3D9.1C2CB10926
3D9.1C2D027E57
3D9.1C2D60D680
3D9.257C5C63AF
3D9.257C62AE2D
3DD.003BE51618
3DD.00773BF530
3DD.0077AE819E

- RRE to WEL to PRA to RIS:
3D9.1BF15FA3DD
3D9.1BF16285AE
3D9.1BF172E833
3D9.1BF17E5D1D
3D9.1BF18AFEFA
3D9.1BF18C45D3
3D9.1BF18DA427
3D9.1BF18DB800
3D9.1BF18E73BE
3D9.1BF18E80F5
3D9.1BF192A467
3D9.1BF19BD855
3D9.1BF1CDE88A
3D9.1BF1D5B9D8
3D9.1BF1D675CC
3D9.1BF1DA7373
3D9.1BF20221E8
3D9.1BF207FAE8
3D9.1BF20873EC
3D9.1BF20B227B
3D9.1BF20C2FA4
3D9.1BF20C3182
3D9.1BF20CDF0C
3D9.1BF20CEEB0
3D9.1BF20D17BC
3D9.1BF25BB9F3
3D9.1C2C44AC6A
3D9.1C2C84BF85
3D9.1C2D3D8D9D
3D9.1C2D462DA2
3D9.257C5A3B05
3D9.257C67123A
3DD.003BA4B9DC

Note: lots of overlap in above four lists


- upstream LGR to NA
3DD.0077E5598A
- This is fine - it's just because it's the last one in the dataset


- Methow River to RRE to WEL:
384.3B23AC6E25
3D9.1C2C3DD368
3D9.1C2C501C8E
3D9.1C2C51CD86
3D9.1C2D125BF9
3D9.1C2D423C24
3D9.1C2D9303CC
3D9.1C2DD6A680
3D9.1C2DD6D852
3D9.1C2DD731BF
3D9.1C2DDA30C0


# run it!

scp -r ./2022-07-16-complete_det_hist/ mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/

# fix quick typo, just reupload the R script

scp ./2022-07-16-complete_det_hist/03_hyak_complete_detection_histories_v2.R mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-07-16-complete_det_hist/

# bug fix, reupload R script, re-run on MOX

scp ./2022-07-16-complete_det_hist/03_hyak_complete_detection_histories_v2.R mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-07-16-complete_det_hist/


### 7-17-2022 ###

- pull run off of mox, inspect

scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-07-16-complete_det_hist/ ./

It looks beautiful!!!


### 7-18-2022 ###

Dang, so there's a bug where we have some NA end times - this messes up interpolating the site visit times
- I'll re-run the states_complete script with that bug fixed, but for now we can use BON arrival times to tweak it
- Okay, so the issue is really in the previous script, where we're not getting end times for site visits that have a single detection (but only at BON adult ladders)

# re-upload the det_hist script and re-run
scp -r ./2022-07-16_det_hist/ mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/


# OKAY - let's see if we can get stan running on mox
- So cmdstanr package will load, but then the stan model completely explodes
- I'm not sure we have cmdstan (no r) installed, which is required - https://mc-stan.org/cmdstanr/articles/cmdstanr.html
- So it sounds like our compiler is too old? I think we ran into this issue before
	- can we load any of the available gcc modules?
		- yes we can, but just using module load doesn't fix it

gcc/6.3.1                                                           
           gcc/8.2.1                                                           
                                gcc/10.1.0                                                          
                        gcc_4.8.5-impi_2017                                                 
                            gcc_8.2.1-ompi_3.1.4                                                
                          gcc_8.2.1-ompi_4.0.1  
                          
                          contrib/gcc-8.3.0                                                      
contrib/gcc-9.3.0                                  
contrib/gcc/6.2.0                                  
contrib/gcc/6.2.0_impi                             
contrib/gcc/6.2.0_mpich-3.2                        
contrib/gcc/6.3.0                                  
contrib/gcc49/4.9.4                                
contrib/gcc_9.3.0_ompi_4.0.7                       
contrib/gcc_10.1.0                                 
contrib/gcc_10.1.0_ompi_4.0.3                      
contrib/gcc_cesg/9.1.0   

# pull the run off mox
scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-07-16_det_hist/ ./

- move it into the complete_det_hist folder for today
scp -r ./2022-07-18-complete_det_hist/ mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/

### 2022-07-19 ###

pull the latest complete det hist script off mox

scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-07-18-complete_det_hist/ ./

Okay, so there's still some issues with this. Made the fix, reupload & run:

scp ./2022-07-18-complete_det_hist/03_hyak_complete_detection_histories_v2.R mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-07-18-complete_det_hist/

### 2022-07-20 ### 
# Pull it back off:
scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-07-18-complete_det_hist/ ./

Wow okay, so this is terrible. Just super messed up, especially for the tributaries

# Okay, I think I made the bug fix. Reupload to mox
scp -r ./2022-07-19-complete_det_hist/ mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/

### 2022-07-21 ###
# Pull run off of mox
scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-07-19-complete_det_hist/ ./

This was the fish we were trying to fix: 3D9.1C2C430C8D
- It appears that we were able to fix this issue, so that's good!

Okay, so there are still some issues with this file, but it's much closer. Also, the
changes are clearly taking effect because we now have more mainstem transitions (which
is due to the script now making that fix for making sure that fish are seen in the downstream
states before ascending the adult ladder, even if they're actually in the right state to
enter a tributary - see edits marked 2022-07-19 in 03 script)

Here are the problem tags:

Asotin Creek to RIS to RRE: 
3D9.1BF27C4DF9
3D9.1C2D6A1268
3D9.1C2D6F4187
3D9.1C2D8288E5
3D9.1C2DF614B4
- This is a weird issue, because that's a Columbia mainstem site. I think somehow that we're
selecting the wrong order of sites somewhere in the code.

Clearwater River to RIS to RRE:
3D9.1C2C571E86
3D9.1C2DF53809
3DD.0077A8D748
- Same weird thing as above

Tucannon River to PRA to RIS:
- Same issue as above, just one state earlier in the order
3D9.1BF26D9E1A
3D9.1C2C3F724F
3D9.1C2C4C5CD3
3D9.1C2C4F4C33
3D9.1C2C517040
3D9.1C2DD35628
3D9.1C2DD9566D


This individual: 3D9.1BF27C4DF9
- Really looks like maybe moving downstream through the adult ladder at LGR? But I don't think
we say that for sure. Need to stick with the assumption that for adults, the ladders are unidirectional

Made the edits, reupload to mox hyak & run:
scp -r ./2022-07-21-complete_det_hist/ mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/

# Pull run
scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-07-21-complete_det_hist/ ./

### 7-27-22 ###

I would estimate that with the new script and its additional components, running the full detection history in
one run would take about 7 hours. That could easily be run overnight, but would have to be on STF.
There's no reason why we couldn't run the chunks of it separately, and that would allow us to run it
on ckpt. We could run CTH 1-4, 5-8, and 9-11, and 12-14. Each individually should take no more
than 2 hours.

# SO: we are going to take the files in 2022-07-27_det_hist, split them up into four runs, and put
an R script and a bash script in each.

We can then do the same thing with the implicit site visit code later. The implicit site visit
code will obviously have to be updated, given that some things have changed, particularly
the addition of non-ascents at the adult ladders. We'll also have to concatenate the other output
files, but that's not a big deal.

### 7-28-22 ###

So I think we now have our det hist script working. copy over the folders:
scp -r ./2022-07-27_det_hist/CTH1-4/ mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-07-27_det_hist/
scp -r ./2022-07-27_det_hist/CTH5-8/ mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-07-27_det_hist/
scp -r ./2022-07-27_det_hist/CTH9-11/ mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-07-27_det_hist/
scp -r ./2022-07-27_det_hist/CTH12-14/ mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-07-27_det_hist/

for fixing the R scripts:
scp ./2022-07-27_det_hist/CTH1-4/CTH1-4_02_hyak_detection_histories_v2.R mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-07-27_det_hist/CTH1-4/
scp ./2022-07-27_det_hist/CTH5-8/CTH5-8_02_hyak_detection_histories_v2.R mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-07-27_det_hist/CTH5-8/
scp ./2022-07-27_det_hist/CTH9-11/CTH9-11_02_hyak_detection_histories_v2.R mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-07-27_det_hist/CTH9-11/
scp ./2022-07-27_det_hist/CTH12-14/CTH12-14_02_hyak_detection_histories_v2.R mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-07-27_det_hist/CTH12-14/

### 7-29-22 ###

# Pull the scripts off mox, and join them

current directory: from_hyak_transfer/

scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-07-27_det_hist/ ./

# okay, made some fixes to the R script, reupload:
scp ./2022-07-27_det_hist/CTH1-4/CTH1-4_02_hyak_detection_histories_v2.R mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-07-27_det_hist/CTH1-4/
scp ./2022-07-27_det_hist/CTH5-8/CTH5-8_02_hyak_detection_histories_v2.R mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-07-27_det_hist/CTH5-8/
scp ./2022-07-27_det_hist/CTH9-11/CTH9-11_02_hyak_detection_histories_v2.R mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-07-27_det_hist/CTH9-11/
scp ./2022-07-27_det_hist/CTH12-14/CTH12-14_02_hyak_detection_histories_v2.R mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-07-27_det_hist/CTH12-14/

# re-run the slurm scripts

# pull the runs
scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-07-27_det_hist/ ./

# Bug fixes
scp ./2022-07-27_det_hist/CTH1-4/CTH1-4_02_hyak_detection_histories_v2.R mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-07-27_det_hist/CTH1-4/
scp ./2022-07-27_det_hist/CTH5-8/CTH5-8_02_hyak_detection_histories_v2.R mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-07-27_det_hist/CTH5-8/
scp ./2022-07-27_det_hist/CTH9-11/CTH9-11_02_hyak_detection_histories_v2.R mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-07-27_det_hist/CTH9-11/
scp ./2022-07-27_det_hist/CTH12-14/CTH12-14_02_hyak_detection_histories_v2.R mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-07-27_det_hist/CTH12-14/


### 8-4-2022 ###

Pull the runs with the latest scripts
scp -r mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-07-27_det_hist/ ./


### 8-8-2022 ###
Fixed a pretty silly typo, reupload and re-run R scripts
scp ./2022-07-27_det_hist/CTH1-4/CTH1-4_02_hyak_detection_histories_v2.R mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-07-27_det_hist/CTH1-4/
scp ./2022-07-27_det_hist/CTH5-8/CTH5-8_02_hyak_detection_histories_v2.R mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-07-27_det_hist/CTH5-8/
scp ./2022-07-27_det_hist/CTH9-11/CTH9-11_02_hyak_detection_histories_v2.R mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-07-27_det_hist/CTH9-11/
scp ./2022-07-27_det_hist/CTH12-14/CTH12-14_02_hyak_detection_histories_v2.R mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/2022-07-27_det_hist/CTH12-14/

# pull runs off hyak

# run the implicit site visit script
scp -r ./2022-08-08-complete_det_hist/ mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/
sbatch complete_det_hist_stf.slurm

# stf nodes are down for maintenance, split the detection history in two and run with two separate R and slurm scripts

scp -r ./2022-08-08-complete_det_hist_ckpt/ mmin@mox.hyak.uw.edu:/gscratch/stf/mmin/
sbatch complete_det_hist_stf_part1.slurm
sbatch complete_det_hist_stf_part2.slurm






