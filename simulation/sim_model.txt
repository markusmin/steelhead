
model {

#state-space likelihood
for(i in 1:n.ind){ # Loop through the detection matrices for each individual
  for(j in 1:(n.obs[i]-1)){ # Loop through each of the observations, stopping at the loss column (-1)

    # Get the current state
    # cur_state <- states_mat[i,j]

    # Get number of possible movements
    # n_movements <- possible_movements[states_mat[i,j]]


    # Multiply design matrix by beta vector to get movement probabilities

    # Get the beta vectors - will be different for each state

# Mainstem, mouth to BON
B_vec_1 <- c(b0_MB_BM, bflow_MB_BM, btemp_MB_BM, brear_MB_BM[rear[i]], borigin_MB_BM[origin[i]])

# Mainstem, BON to MCN
B_vec_2 <- c(b0_BM_MB, b0_BM_MIP,  b0_BM_DES,  b0_BM_JDR,
             bflow_BM_MB, bflow_BM_MIP,  bflow_BM_DES,  bflow_BM_JDR,
             btemp_BM_MB, btemp_BM_MIP,  btemp_BM_DES,  btemp_BM_JDR,
             brear_BM_MB[rear[i]], brear_BM_MIP[rear[i]],  brear_BM_DES[rear[i]],  brear_BM_JDR[rear[i]],
             borigin_BM_MB[origin[i]], borigin_BM_MIP[origin[i]],  borigin_BM_DES[origin[i]], borigin_BM_JDR[origin[i]])

# Mainstem, MCN to ICH or PRA
B_vec_3 <- c(b0_MIP_BM, b0_MIP_PR, b0_MIP_IL, b0_MIP_YAK,
             bflow_MIP_BM, bflow_MIP_PR, bflow_MIP_IL, bflow_MIP_YAK,
             btemp_MIP_BM, btemp_MIP_PR, btemp_MIP_IL, btemp_MIP_YAK,
             brear_MIP_BM[rear[i]], brear_MIP_PR[rear[i]], brear_MIP_IL[rear[i]], brear_MIP_YAK[rear[i]],
             borigin_MIP_BM[origin[i]], borigin_MIP_PR[origin[i]], borigin_MIP_IL[origin[i]], borigin_MIP_YAK[origin[i]])

# Mainstem, PRA to RIS
B_vec_4 <- c(b0_PR_MIP, bflow_PR_MIP, btemp_PR_MIP, brear_PR_MIP[rear[i]], borigin_PR_MIP[origin[i]])

# Mainstem, ICH to LGR
B_vec_5 <- c(b0_IL_MIP, b0_IL_TUC,
             bflow_IL_MIP, bflow_IL_TUC,
             btemp_IL_MIP, btemp_IL_TUC,
             brear_IL_MIP[rear[i]], brear_IL_TUC[rear[i]],
             borigin_IL_MIP[origin[i]], borigin_IL_TUC[origin[i]])

# Deschutes River
B_vec_6 <- c(b0_DES_BM, bflow_DES_BM, btemp_DES_BM, brear_DES_BM[rear[i]], borigin_DES_BM[origin[i]])

# John Day River
B_vec_7 <- c(b0_JDR_BM, bflow_JDR_BM, btemp_JDR_BM, brear_JDR_BM[rear[i]], borigin_JDR_BM[origin[i]])

# Yakima River
B_vec_8 <- c(b0_YAK_MIP, bflow_YAK_MIP, btemp_YAK_MIP, brear_YAK_MIP[rear[i]], borigin_YAK_MIP[origin[i]])

# Tucannon River
B_vec_9 <- c(b0_TUC_IL, bflow_TUC_IL, btemp_TUC_IL, brear_TUC_IL[rear[i]], borigin_TUC_IL[origin[i]])

# Store beta vectors in a list
# B_vec_list <- list(B_vec_1, B_vec_2, B_vec_3, B_vec_4, B_vec_5,
#                    B_vec_6, B_vec_7, B_vec_8, B_vec_9)
# We can't use vectors in JAGS

# Store all beta vectors as one big vector
B_vec_all <- c(B_vec_1, B_vec_2, B_vec_3, B_vec_4, B_vec_5, B_vec_6, B_vec_7, B_vec_8, B_vec_9)
# Get lengths of each individual vector and store
B_vec_lengths <- c(length(B_vec_1), length(B_vec_2), length(B_vec_3), length(B_vec_4), length(B_vec_5), length(B_vec_6), length(B_vec_7), length(B_vec_8), length(B_vec_9))

# Now, index to the current vector of betas
# Basically what we're doing here is making sure we start and end with the length of the current vector
# B_vec_current <- B_vec_all[((sum(B_vec_lengths[1:states_mat[i,j]])-B_vec_lengths[states_mat[i,j]]+1):sum(B_vec_lengths[1:states_mat[i,j]]))[(sum(B_vec_lengths[1:states_mat[i,j]])-B_vec_lengths[states_mat[i,j]]+1):sum(B_vec_lengths[1:states_mat[i,j]]) > 0]]
  

    # p <- X %*% B_vec_list[[states_mat[i,j]]]
    # p <- X %*% B_vec_current

    # Evaluate the multinomial likelihood for the counts of detection probabilities
    # Need to index to only the elements of the matrix that are applicable for this transition
    # y[,j,i] ~ dmulti(X[1:(possible_movements[states_mat[i,j]]-1),1:((possible_movements[states_mat[i,j]]-1)*5),(j + ifelse(i > 1, sum(n.obs[1:i])-n.obs[i],0))] %*% B_vec_all[((sum(B_vec_lengths[1:states_mat[i,j]])-B_vec_lengths[states_mat[i,j]]+1):sum(B_vec_lengths[1:states_mat[i,j]]))[(sum(B_vec_lengths[1:states_mat[i,j]])-B_vec_lengths[states_mat[i,j]]+1):sum(B_vec_lengths[1:states_mat[i,j]]) > 0]], 1)
    # y[,j,i] ~ dmulti(X[1:(possible_movements[states_mat[i,j]]-1),1:((possible_movements[states_mat[i,j]]-1)*5),(j + ifelse(i > 1, sum(n.obs[1:i])-n.obs[i],0))] %*% B_vec_all[((sum(B_vec_lengths[1:states_mat[i,j]])-B_vec_lengths[states_mat[i,j]]+1):sum(B_vec_lengths[1:states_mat[i,j]]))[1:3]], 1)
  }

}

    ##### PRIORS #####

    # Mainstem, mouth to BON
    b0_MB_BM ~ dnorm(0,0.001)
    bflow_MB_BM ~ dnorm(0,0.001)
    btemp_MB_BM ~ dnorm(0,0.001)
    for (i in 1:2){
      brear_MB_BM[i] ~ dnorm(0,0.001)
    }
    for (i in 1:3){
      borigin_MB_BM[i] ~ dnorm(0,0.001)
    }

  # Mainstem, BON to MCN
  b0_BM_MB ~ dnorm(0,0.001)
  b0_BM_MIP ~ dnorm(0,0.001)
  b0_BM_DES ~ dnorm(0,0.001)
  b0_BM_JDR ~ dnorm(0,0.001)
  bflow_BM_MB ~ dnorm(0,0.001)
  bflow_BM_MIP ~ dnorm(0,0.001)
  bflow_BM_DES ~ dnorm(0,0.001)
  bflow_BM_JDR ~ dnorm(0,0.001)
  btemp_BM_MB ~ dnorm(0,0.001)
  btemp_BM_MIP ~ dnorm(0,0.001)
  btemp_BM_DES ~ dnorm(0,0.001)
  btemp_BM_JDR ~ dnorm(0,0.001)
  for (i in 1:2){
    brear_BM_MB[i] ~ dnorm(0,0.001)
  }
  for (i in 1:2){
    brear_BM_MIP[i] ~ dnorm(0,0.001)
  }
  for (i in 1:2){
    brear_BM_DES[i] ~ dnorm(0,0.001)
  }
  for (i in 1:2){
    brear_BM_JDR[i] ~ dnorm(0,0.001)
  }
  for (i in 1:3){
    borigin_BM_MB[i] ~ dnorm(0,0.001)
  }
  for (i in 1:3){
    borigin_BM_MIP[i] ~ dnorm(0,0.001)
  }
  for (i in 1:3){
    borigin_BM_DES[i] ~ dnorm(0,0.001)
  }
  for (i in 1:3){
    borigin_BM_JDR[i] ~ dnorm(0,0.001)
  }

  # Mainstem, MCN to ICH or PRA
  b0_MIP_BM ~ dnorm(0,0.001)
  b0_MIP_PR ~ dnorm(0,0.001)
  b0_MIP_IL ~ dnorm(0,0.001)
  b0_MIP_YAK ~ dnorm(0,0.001)
  bflow_MIP_BM ~ dnorm(0,0.001)
  bflow_MIP_PR ~ dnorm(0,0.001)
  bflow_MIP_IL ~ dnorm(0,0.001)
  bflow_MIP_YAK ~ dnorm(0,0.001)
  btemp_MIP_BM ~ dnorm(0,0.001)
  btemp_MIP_PR ~ dnorm(0,0.001)
  btemp_MIP_IL ~ dnorm(0,0.001)
  btemp_MIP_YAK ~ dnorm(0,0.001)
  for (i in 1:2){
    brear_MIP_BM[i] ~ dnorm(0,0.001)
  }
  for (i in 1:2){
    brear_MIP_PR[i] ~ dnorm(0,0.001)
  }
  for (i in 1:2){
    brear_MIP_IL[i] ~ dnorm(0,0.001)
  }
  for (i in 1:2){
    brear_MIP_YAK[i] ~ dnorm(0,0.001)
  }
  for (i in 1:3){
    borigin_MIP_BM[i] ~ dnorm(0,0.001)
  }
  for (i in 1:3){
    borigin_MIP_PR[i] ~ dnorm(0,0.001)
  }
  for (i in 1:3){
    borigin_MIP_IL[i] ~ dnorm(0,0.001)
  }
  for (i in 1:3){
    borigin_MIP_YAK[i] ~ dnorm(0,0.001)
  }

  # Mainstem, PRA to RIS
  b0_PR_MIP ~ dnorm(0,0.001)
  bflow_PR_MIP ~ dnorm(0,0.001)
  btemp_PR_MIP ~ dnorm(0,0.001)
  for (i in 1:2){
    brear_PR_MIP[i] ~ dnorm(0,0.001)
  }
  for (i in 1:3){
    borigin_PR_MIP[i] ~ dnorm(0,0.001)
  }

  # Mainstem, ICH to LGR
  b0_IL_MIP ~ dnorm(0,0.001)
  b0_IL_TUC ~ dnorm(0,0.001)
  bflow_IL_MIP ~ dnorm(0,0.001)
  bflow_IL_TUC ~ dnorm(0,0.001)
  btemp_IL_MIP ~ dnorm(0,0.001)
  btemp_IL_TUC ~ dnorm(0,0.001)
  for (i in 1:2){
    brear_IL_MIP[i] ~ dnorm(0,0.001)
  }
  for (i in 1:2){
    brear_IL_TUC[i] ~ dnorm(0,0.001)
  }
  for (i in 1:3){
    borigin_IL_MIP[i] ~ dnorm(0,0.001)
  }
  for (i in 1:3){
    borigin_IL_TUC[i] ~ dnorm(0,0.001)
  }

  # Deschutes River
  b0_DES_BM ~ dnorm(0,0.001)
  bflow_DES_BM ~ dnorm(0,0.001)
  btemp_DES_BM ~ dnorm(0,0.001)
  for (i in 1:2){
    brear_DES_BM[i] ~ dnorm(0,0.001)
  }
  for (i in 1:3){
    borigin_DES_BM[i] ~ dnorm(0,0.001)
  }

  # John Day River
  b0_JDR_BM ~ dnorm(0,0.001)
  bflow_JDR_BM ~ dnorm(0,0.001)
  btemp_JDR_BM ~ dnorm(0,0.001)
  for (i in 1:2){
    brear_JDR_BM[i] ~ dnorm(0,0.001)
  }
  for (i in 1:3){
    borigin_JDR_BM[i] ~ dnorm(0,0.001)
  }

  # Yakima River
  b0_YAK_MIP ~ dnorm(0,0.001)
  bflow_YAK_MIP ~ dnorm(0,0.001)
  btemp_YAK_MIP ~ dnorm(0,0.001)
  for (i in 1:2){
    brear_YAK_MIP[i] ~ dnorm(0,0.001)
  }
  for (i in 1:3){
    borigin_YAK_MIP[i] ~ dnorm(0,0.001)
  }

  # Tucannon River
  b0_TUC_IL ~ dnorm(0,0.001)
  bflow_TUC_IL ~ dnorm(0,0.001)
  btemp_TUC_IL ~ dnorm(0,0.001)
  for (i in 1:2){
    brear_TUC_IL[i] ~ dnorm(0,0.001)
  }
  for (i in 1:3){
    borigin_TUC_IL[i] ~ dnorm(0,0.001)
  }

}
